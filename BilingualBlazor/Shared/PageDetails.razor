@inject StateContainer StateContainer
@implements IDisposable

@code {
    [Parameter]
    public string Value { get; set; }

    protected override void OnInitialized()
    {
        //StateContainer.OnChange += StateHasChanged;
        StateContainer.OnChange += StateHasChanged;
        //StateContainer.SetTitle(Value);

        StateContainer.Title = Value;
    }

    //protected override void OnParametersSet()
    //{

    //    //StateContainer.SetTitle(Value);
    //    //StateHasChanged();

    //    //base.OnParametersSet();
    //}

    //protected override void OnAfterRender(bool firstRender)
    //{
    //    //StateHasChanged();
    //    //base.OnAfterRender(firstRender);
    //}

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}