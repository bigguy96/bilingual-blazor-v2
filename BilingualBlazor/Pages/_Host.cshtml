@page "/"
@namespace BilingualBlazor.Pages
@using System.Reflection
@using BilingualBlazor.Utils
@using Microsoft.AspNetCore.Localization
@using RouteAttribute = Microsoft.AspNetCore.Components.RouteAttribute
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Routing
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    var requestCultureFeature = Request.HttpContext.Features.Get<IRequestCultureFeature>();
    var twoLetterRequestCulture = requestCultureFeature.RequestCulture.UICulture.TwoLetterISOLanguageName;
    //var toggle = twoLetterRequestCulture.Equals("en", StringComparison.CurrentCultureIgnoreCase) ? "Français" : "English";
    //var toggle = "English";
    //var twoLetterRequestCulture = "en";
    var path = HttpContext.Request.Path;
    RouteHelper.GetAlternate(path, twoLetterRequestCulture);

    // Get all the components whose base class is ComponentBase
    //var components = Assembly.GetExecutingAssembly().ExportedTypes.Where(t => t.IsSubclassOf(typeof(ComponentBase))).ToList();

    //var routables = components.Where(c => c.GetCustomAttributes(inherit: true).OfType<RouteAttribute>().ToArray().Any());

    //var pageTypeList = Assembly.GetExecutingAssembly().GetTypes().Where(t => t.GetCustomAttribute(typeof(RouteAttribute)) != null);

    //var routeAttributes = Assembly.GetExecutingAssembly().ExportedTypes
    //    .Where(t => t.IsSubclassOf(typeof(ComponentBase)));
    //    .Where(x => x.Name.Length > 1)
    //    .Select(s => new { RouteAttributes = s.GetCustomAttributes(inherit: true).OfType<RouteAttribute>() });

    ////get route values for the current page and get the alternate language.
    //var alternateRoute = routeAttributes
    //    .SingleOrDefault(x => x.RouteAttributes.Any(a => a.Template.Contains(path)))?.RouteAttributes
    //    .SingleOrDefault(s => s.Template.Contains(twoLetterRequestCulture))?.Template;

    //https://github.com/tc-ca/DSD-Marine-Blazor-Components/blob/master/DemoWebsites/BlazorComponentDemoTestSite/DSD.MSS.Blazor.Components.DemoSite/Pages/BasePage.razor.cs
    //https://stackoverflow.com/questions/59197729/dynamic-hosts-cshtml-file-in-blazor-with-c-sharp-code
    //https://github.com/dotnet/aspnetcore/issues/16009
    //https://stackoverflow.com/questions/60161726/find-the-blazor-component-class-corresponding-to-a-given-path
    //https://stackoverflow.com/questions/62674998/in-blazor-how-to-retrieve-all-routable-razor-component-names-in-pages-directory
}

<!DOCTYPE html>
<!--[if lt IE 9]><html class="no-js lt-ie9" lang="en" dir="ltr"><![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="@twoLetterRequestCulture" dir="ltr">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <!-- Web Experience Toolkit (WET) / Boîte à outils de l'expérience Web (BOEW) wet-boew.github.io/wet-boew/License-en.html / wet-boew.github.io/wet-boew/Licence-fr.html -->
    <title>Content page - Centrally Deployed Templates Solution (CDTS)</title>
    <meta content="width=device-width,initial-scale=1" name="viewport">
    <!-- Meta data -->
    <meta name="description" content="Web Experience Toolkit (WET) includes reusable components for building and maintaining innovative Web sites that are accessible, usable, and interoperable. These reusable components are open source software and free for use by departments and external Web communities">
    <!-- Meta data-->
    <!-- Load closure template scripts -->
    <script src="https://www.canada.ca/etc/designs/canada/cdts/gcweb/rn/cdts/compiled/soyutils.js"></script>
    <script src="https://www.canada.ca/etc/designs/canada/cdts/gcweb/rn/cdts/compiled/wet-en.js"></script>
    <noscript>
        <!-- Write closure fall-back static file -->
        <!-- /ROOT/app/cls/WET/gcweb/v4_0_28/cdts/static/refTop.html -->
    </noscript>
    <!-- Write closure template -->
    <script>
        document.write(wet.builder.refTop({
            "isApplication": true
        }));
    </script>
</head>
<body vocab="https://schema.org/" typeof="WebPage">
    <div id="def-top">
        <!-- Write closure fall-back static file -->
        <!-- /ROOT/app/cls/WET/gcweb/v4_0_28/cdts/static/custommenuTop-en.html -->
    </div>
    <!-- Write closure template -->
    <script>
        var defTop = document.getElementById("def-top");
        defTop.outerHTML = wet.builder.appTop({
            "appName": [{ "text": "Application name", "href": "#" }],
            "lngLinks": [{ "lang": "fr", "href": "apptop_custommenu-fr.html", "text": "Français" }],
            "menuPath": "https://ssl-templates.services.gc.ca/app/cls/WET/gcweb/v4_0_28/cdts/ajax/appmenu-en.html"
        });
    </script>
    <main role="main" property="mainContentOfPage" class="container">
        <app>
            <component type="typeof(App)" render-mode="ServerPrerendered" />
        </app>
        <p>@twoLetterRequestCulture</p>
        <div id="def-preFooter">
            <!-- Write closure fall-back static file -->
            <!-- /ROOT/app/cls/WET/gcweb/v4_0_28/cdts/static/preFooter-en.html -->
        </div>
        <!-- Write closure template -->
        <script>
            var defPreFooter = document.getElementById("def-preFooter");
            defPreFooter.outerHTML = wet.builder.preFooter({
                "dateModified": "2019-03-08"
            });
        </script>
    </main>
    <div id="def-footer">
        <!-- Write closure fall-back static file -->
        <!-- /ROOT/app/cls/WET/gcweb/v4_0_28/cdts/static/appFooter-en.html -->
    </div>
    <!-- Write closure template -->
    <script>
        var defFooter = document.getElementById("def-footer");
        defFooter.outerHTML = wet.builder.appFooter({
            "showFeatures": false
        });
    </script>
    <!-- Write closure template -->
    <script>
        document.write(wet.builder.refFooter({
            "isApplication": true
        }));
    </script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>